{"ast":null,"code":"var _jsxFileName = \"/Users/henrik/nexttest/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Prismic from 'prismic-javascript';\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Hellodd Next.js\"), props.map((thing, index) => __jsx(\"div\", {\n    key: index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, thing)));\n};\n\nIndex.getInitialProps = async () => {\n  const apiEndpoint = \"https://lbb-test.prismic.io/api/v2\";\n  const api = await Prismic.getApi(apiEndpoint);\n  const data = await api.query(\"\"); // An empty query will return all the documents\n\n  console.log(data);\n  return _objectSpread({}, Object.keys(data.results[0].data));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/henrik/nexttest/pages/index.js"],"names":["Prismic","Index","props","map","thing","index","getInitialProps","apiEndpoint","api","getApi","data","query","console","log","Object","keys","results"],"mappings":";;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGA,KAAK,CAACC,GAAN,CAAU,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAAK,IAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBD,KAAlB,CAA5B,CAFH,CADF;AAMD,CAPD;;AASAH,KAAK,CAACK,eAAN,GAAwB,YAAY;AACnC,QAAMC,WAAW,GAAG,oCAApB;AAEA,QAAMC,GAAG,GAAG,MAAMR,OAAO,CAACS,MAAR,CAAeF,WAAf,CAAlB;AACA,QAAMG,IAAI,GAAG,MAAMF,GAAG,CAACG,KAAJ,CAAU,EAAV,CAAnB,CAJmC,CAID;;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,2BACII,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACM,OAAL,CAAa,CAAb,EAAgBN,IAA5B,CADJ;AAGA,CAVD;;AAYA,eAAeT,KAAf","sourcesContent":["import Prismic from 'prismic-javascript';\n\nconst Index = props => {\n  return (\n    <div>\n      <p>Hellodd Next.js</p>\n      {props.map((thing, index) => <div key={index}>{thing}</div>)}\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => {\n\tconst apiEndpoint = \"https://lbb-test.prismic.io/api/v2\";\n\t \n\tconst api = await Prismic.getApi(apiEndpoint);\n\tconst data = await api.query(\"\"); // An empty query will return all the documents\n\tconsole.log(data);\n\t\n\treturn {\n\t\t...Object.keys(data.results[0].data)\n\t};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}