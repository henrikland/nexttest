{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henrik/nexttest/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Prismic from 'prismic-javascript';\n\nvar Index = function Index(props) {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Hellodd Next.js\"), props);\n};\n\nIndex.getInitialProps = function _callee() {\n  var apiEndpoint, api, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          apiEndpoint = \"https://lbb-test.prismic.io/api/v2\";\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Prismic.getApi(apiEndpoint));\n\n        case 3:\n          api = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(api.query(\"\"));\n\n        case 6:\n          data = _context.sent;\n          return _context.abrupt(\"return\", _objectSpread({}, data.results));\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/henrik/nexttest/pages/index.js"],"names":["Prismic","Index","props","getInitialProps","apiEndpoint","getApi","api","query","data","results"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGA,KAFH,CADF;AAMD,CAPD;;AASAD,KAAK,CAACE,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,UAAAA,WADiB,GACH,oCADG;AAAA;AAAA,2CAGLJ,OAAO,CAACK,MAAR,CAAeD,WAAf,CAHK;;AAAA;AAGjBE,UAAAA,GAHiB;AAAA;AAAA,2CAIJA,GAAG,CAACC,KAAJ,CAAU,EAAV,CAJI;;AAAA;AAIjBC,UAAAA,IAJiB;AAAA,6DAOnBA,IAAI,CAACC,OAPc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAWA,eAAeR,KAAf","sourcesContent":["import Prismic from 'prismic-javascript';\n\nconst Index = props => {\n  return (\n    <div>\n      <p>Hellodd Next.js</p>\n      {props}\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => {\n\tconst apiEndpoint = \"https://lbb-test.prismic.io/api/v2\";\n\t \n\tconst api = await Prismic.getApi(apiEndpoint);\n\tconst data = await api.query(\"\"); // An empty query will return all the documents\n\t\n\treturn {\n\t\t...data.results\n\t};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}