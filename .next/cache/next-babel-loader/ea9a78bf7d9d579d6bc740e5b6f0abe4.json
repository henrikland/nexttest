{"ast":null,"code":"var _jsxFileName = \"/Users/henrik/nexttest/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Hellodd Next.js\"), props);\n};\n\nIndex.getInitialProps = async () => {\n  const response = await fetch('https://lbb-test.cdn.prismic.io/api/v2/documents/search?ref=master&lang=da-dk');\n  const data = await response.json();\n  return _objectSpread({}, data.results.data);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/henrik/nexttest/pages/index.js"],"names":["fetch","Index","props","getInitialProps","response","data","json","results"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AACrB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEGA,KAFH,CADF;AAMD,CAPD;;AASAD,KAAK,CAACE,eAAN,GAAwB,YAAY;AACnC,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAAC,+EAAD,CAA5B;AACA,QAAMK,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAnB;AAEA,2BACID,IAAI,CAACE,OAAL,CAAaF,IADjB;AAGA,CAPD;;AASA,eAAeJ,KAAf","sourcesContent":["import fetch from 'isomorphic-unfetch';\n\nconst Index = props => {\n  return (\n    <div>\n      <p>Hellodd Next.js</p>\n      {props}\n    </div>\n  );\n};\n\nIndex.getInitialProps = async () => {\n\tconst response = await fetch('https://lbb-test.cdn.prismic.io/api/v2/documents/search?ref=master&lang=da-dk');\n\tconst data = await response.json();\n\n\treturn {\n\t\t...data.results.data\n\t};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}